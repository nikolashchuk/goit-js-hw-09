{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CA1BEQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAAeF,EAAIG,OAAOC,SAChC,IAAIf,EAAQgB,OAAOH,EAAab,MAAMiB,OACtC,MAAMC,EAAOF,OAAOH,EAAaK,KAAKD,OAChCE,EAASH,OAAOH,EAAaM,OAAOF,OAC1C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGpB,GACdqB,MAAKC,GAAK1B,EAAA2B,OAAOC,QAAQF,KACzBG,OAAMC,GAAK9B,EAAA2B,OAAOI,QAAQD,KAC7B1B,GAASkB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const formElements = evt.target.elements;\n  let delay = Number(formElements.delay.value);\n  const step = Number(formElements.step.value);\n  const amount = Number(formElements.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(x => Notify.success(x))\n      .catch(y => Notify.failure(y));\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","formElements","target","elements","Number","value","step","amount","i","then","x","Notify","success","catch","y","failure"],"version":3,"file":"03-promises.2a9ea272.js.map"}